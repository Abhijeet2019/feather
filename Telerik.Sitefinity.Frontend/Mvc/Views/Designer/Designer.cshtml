@model Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers

<div class="designer" modal dialog-controller="DialogCtrl">
	<server-data default-view='@Model.DefaultView' application-root='@Url.Content("~/")' widget-name='@ViewBag.ControlName'></server-data>

	<script type="text/ng-template" id="dialog-template">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="cancel($event)">&times;</button>
			<h1 class="modal-title">@Html.Raw(ViewBag.ControlName)</h1>
		</div>
		<div class="modal-body">
			<div ng-show="feedback.showError" class="alert alert-danger">
				<a class="close" data-dismiss="alert" ng-click="hideError()">x</a>
				<strong>@Html.Resource("Error")</strong> <span ng-bind="feedback.errorMessage"></span>
			</div>

			<div ng-show="feedback.showLoadingIndicator" class="s-loading m-bottom-sm"></div>

			<div id="viewsPlaceholder" ng-show="feedback.showView" ng-view></div>
		</div>
		<div class="modal-footer">
			<button class="btn btn-primary" ng-click="save(false)">@Html.Resource("Save")</button>
			<button class="btn btn-default" ng-click="save(true)" ng-hide="hideSaveAllTranslations">@Html.Resource("SaveAllTranslations")</button>
			<a class="btn btn-link" data-dismiss="modal" ng-click="cancel($event)">@Html.Resource("Cancel")</a>

			@if (Model.Views.Count() > 1)
			{
				foreach (var view in Model.Views)
				{
					<a class="btn btn-default btn-xs pull-right m-top-xs" ng-hide="isCurrentView('@view')" href="#/@view">@Html.Resource(view, fallbackToKey: true)</a>
				}
			}
		</div>
	</script>
</div>

@* Latest compiled and minified CSS *@
<link rel="stylesheet" href='@Url.WidgetContent("Mvc/Scripts/Bootstrap/css/bootstrap.min.css")'>
@* Optional theme *@
<link rel="stylesheet" href='@Url.WidgetContent("Mvc/Styles/sitefinity-theme.min.css")'>

@Html.Script(Url.WidgetContent("Mvc/Scripts/server-data.js"))
@Html.Script(Url.WidgetContent("Mvc/Scripts/Designer/modal-dialog.js"))
@Html.Script(Url.WidgetContent("Mvc/Scripts/Designer/designer.js"))

@foreach (var scriptPath in Model.ScriptReferences)
{
	@Html.Script(Url.WidgetContent(scriptPath))
}